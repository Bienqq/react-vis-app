{"version":3,"sources":["components/common/SnackbarContentWrapper.js","actions/actions.js","constants/actionTypes.js","components/common/GlobalSnackbar.js","components/chart-drawer-navbar/CustomTextField.js","components/chart-drawer-navbar/MoreOptions.js","components/chart-drawer-navbar/ChartDrawerNavbar.js","utils/MathParser.js","config/config.js","components/common/TemporaryPopover.js","components/common/ShareLinkDialog.js","components/plot/FlexPlot.js","components/3d-chart-drawer/ChartDrawer.js","components/graph-drawer-navbar/GraphDrawerNavbar.js","components/graph/FlexGraph.js","utils/GraphUtils.js","components/graph-drawer/GraphDrawer.js","components/app/App.js","serviceWorker.js","reducers/reducer.js","store.js","index.js"],"names":["useStylesWrapper","makeStyles","theme","error","backgroundColor","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","props","classes","onClose","SnackbarContent","className","id","clsx","action","IconButton","key","color","onClick","globalSnackbar","show","snackbarOptions","type","payload","globalLinearProgress","connect","showSnackbar","dispatch","hideSnackbar","onSnackbarCLose","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","options","CustomTextField","withStyles","root","borderBottomColor","borderBottom","borderColor","TextField","useStyles","formContainer","flexWrap","textField","marginLeft","width","start","end","step","updateData","data","updatePlottingData","handleChange","name","event","value","Number","parseFloat","target","isNaN","closed","noValidate","autoComplete","label","onChange","margin","ChartDrawerNavbar","state","showMoreOptions","_handleDrawButton","draw","_onInputChange","updateFunctionForm","_handleShowMoreOptions","setState","this","formula","showLinearProgress","AppBar","position","appBar","Toolbar","search","searchIcon","SvgIcon","InputBase","placeholder","inputRoot","input","inputInput","ButtonGroup","variant","buttonGroup","Button","size","LinearProgress","component","Link","to","React","Component","componentWithStyles","flexGrow","borderRadius","shape","fade","common","white","breakpoints","up","height","pointerEvents","justifyContent","padding","transition","transitions","create","MathParser","stop","parser","Math","evaluate","x","range","y","z","temp","push","process","REACT_APP_PROTOCOL","REACT_APP_PORT","REACT_APP_SERVER_ADDRESS","endpoints","API","SHARE_PLOT_URL","SHARE_GRAPH_URL","typography","TemporaryPopover","anchorEl","Popover","transformOrigin","Typography","Transition","forwardRef","ref","Slide","direction","ShareLinkDialog","handleClose","link","useState","showPopover","setShowPopover","setAnchorEl","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogContentText","DialogActions","currentTarget","navigator","clipboard","writeText","finally","setTimeout","PlotlyComponent","createPlotlyComponent","Plotly","layout","title","autosize","config","showLink","displayModeBar","FlexPlot","finished","showDialog","shareLink","_onShareButtonClicked","axios","post","then","response","shareUrl","catch","err","console","_onShareDialogClose","drawPlot","plotRef","createRef","onRef","undefined","marker","Box","flexDirection","pt","ChartDrawer","_drawPlot","plot","Fragment","fileUploaded","accept","style","multiple","fileReader","FileReader","readAsBinaryString","files","onload","e","result","htmlFor","graphOptions","hierarchical","edges","arrows","enabled","from","nodes","font","FlexGraph","graphData","drawGraph","csvFile","Parser","parse","nodesAmount","length","slice","resultNodes","resultEdges","i","trim","random","toString","Error","item1","item2","processAndValidateGraphData","prepareRequestData","log","connections","map","item","connection_from","connection_to","node","graph","mt","GraphDrawer","_drawGraph","App","basename","exact","path","Boolean","window","location","hostname","match","initState","reducer","propertyToUpdate","Object","keys","createStore","chatReducer","composeWithDevTools","ReactDOM","render","store","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06837d57.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStylesWrapper = makeStyles(theme => ({\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n    const classes = useStylesWrapper();\r\n    const {message, onClose} = props;\r\n    // todo handle options\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classes.error}\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <ErrorIcon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n               </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SnackbarContentWrapper;","import {GLOBAL_SNACKBAR, UPDATE_FUNCTION_FORM, UPDATE_PLOTTING_DATA, GLOBAL_LINEAR_PROGRESS} from \"../constants/actionTypes\";\r\n\r\nexport const updatePlottingData = (data) => {\r\n    return {\r\n        type: UPDATE_PLOTTING_DATA,\r\n        payload: {\r\n            data,\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateFunctionForm = formula => {\r\n    return {\r\n        type: UPDATE_FUNCTION_FORM,\r\n        payload: {\r\n            formula\r\n        }\r\n    }\r\n};\r\n\r\nexport const globalSnackbar = (show, snackbarOptions={}) => {\r\n    return {\r\n        type: GLOBAL_SNACKBAR,\r\n        payload: {\r\n            show,\r\n            snackbarOptions\r\n        }\r\n    }\r\n};\r\n\r\nexport const globalLinearProgress = show => {\r\n    return {\r\n        type: GLOBAL_LINEAR_PROGRESS,\r\n        payload: {\r\n            show,\r\n        }\r\n    }\r\n};","export const UPDATE_FUNCTION_FORM = 'UPDATE_FUNCTION_FORM';\r\nexport const UPDATE_PLOTTING_DATA = 'UPDATE_PLOTTING_DATA';\r\nexport const GLOBAL_SNACKBAR = 'GLOBAL_SNACKBAR';\r\nexport const GLOBAL_LINEAR_PROGRESS = 'GLOBAL_LINEAR_PROGRESS';","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\nimport {globalSnackbar} from \"../../actions/actions\";\r\nimport {connect} from 'react-redux'\r\n\r\nfunction GlobalSnackbar(props) {\r\n\r\n    const onSnackbarCLose = () => {\r\n        props.hideSnackbar(true)\r\n    };\r\n\r\n    const {showSnackbar, snackbarOptions} = props;\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n            open={showSnackbar}\r\n            autoHideDuration={5000}\r\n            onClose={onSnackbarCLose}\r\n        >\r\n            <SnackbarContentWrapper\r\n                onClose={onSnackbarCLose}\r\n                message={snackbarOptions.message}\r\n                options={snackbarOptions}\r\n            />\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({showSnackbar, snackbarOptions}) => ({showSnackbar, snackbarOptions});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        hideSnackbar: () => dispatch(globalSnackbar(false)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalSnackbar);","import TextField from '@material-ui/core/TextField';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n// Overriding default styles for TextField\r\nconst CustomTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'ghostwhite',\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInput-underline': {\r\n            '&:before': {\r\n                borderBottomColor: 'ghostwhite',\r\n            },\r\n            '&:hover:not(.Mui-disabled):before': {\r\n                borderBottom: '1px solid ghostwhite',\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport {SlideDown} from 'react-slidedown';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux'\r\nimport {updatePlottingData} from \"../../actions/actions\";\r\n\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction MoreOptions({open, start, end, step, updateData}) {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = name => event => {\r\n        const value = Number.parseFloat(event.target.value);\r\n        updateData({[name]: Number.isNaN(value) ? \"\" : value});\r\n    };\r\n\r\n    return (\r\n        //component taken from https://github.com/frankwallis/react-slidedown\r\n        <SlideDown closed={!open}>\r\n            <div>\r\n                <form className={classes.formContainer} noValidate autoComplete=\"off\">\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"Start point\"\r\n                        type=\"number\"\r\n                        value={start}\r\n                        onChange={handleChange('start')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"End point\"\r\n                        type=\"number\"\r\n                        value={end}\r\n                        className={classes.textField}\r\n                        onChange={handleChange('end')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"Step\"\r\n                        type=\"number\"\r\n                        value={step}\r\n                        className={classes.textField}\r\n                        onChange={handleChange('step')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        </SlideDown>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({start, end, step}) => ({start, end, step});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateData: data => dispatch(updatePlottingData(data))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreOptions);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {fade, withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport {Function} from 'mdi-material-ui'\r\nimport MoreOptions from \"./MoreOptions\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {connect} from 'react-redux'\r\nimport {updateFunctionForm} from '../../actions/actions';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { Link } from 'react-router-dom';\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(5),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 180,\r\n            '&:focus': {\r\n                width: 260,\r\n            },\r\n        },\r\n    },\r\n    buttonGroup: {\r\n        margin: 4,\r\n    },\r\n});\r\n\r\nclass ChartDrawerNavbar extends React.Component {\r\n\r\n    state = {\r\n        showMoreOptions: false,\r\n    };\r\n\r\n    _handleDrawButton = () => {\r\n        this.props.draw()\r\n    };\r\n\r\n    _onInputChange = (event) => {\r\n        this.props.updateFunctionForm(event.target.value)\r\n    };\r\n\r\n    _handleShowMoreOptions = () => {\r\n        this.setState({showMoreOptions: !this.state.showMoreOptions})\r\n    };\r\n\r\n    render() {\r\n        const {classes, formula, showLinearProgress} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"relative\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SvgIcon>\r\n                                    <Function/>\r\n                                </SvgIcon>\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Write function formula\"\r\n                                classes={{root: classes.inputRoot, input: classes.inputInput}}\r\n                                value={formula}\r\n                                onChange={this._onInputChange}\r\n                            />\r\n\r\n                            <ButtonGroup variant=\"contained\" color=\"inherit\" className={classes.buttonGroup}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this._handleDrawButton}>\r\n                                    Draw\r\n                                </Button>\r\n                                <Button color=\"primary\" size=\"small\" onClick={this._handleShowMoreOptions}>\r\n                                    <ArrowDropDownIcon/>\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </Toolbar>\r\n                    <MoreOptions open={this.state.showMoreOptions}/>\r\n                </AppBar>\r\n                {showLinearProgress && <LinearProgress color=\"secondary\"/> }\r\n                <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/graph-drawer\">\r\n                    <ArrowBackIcon/> Change app\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChartDrawerNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst componentWithStyles = withStyles(styles)(ChartDrawerNavbar);\r\n\r\nconst mapStateToProps = ({formula, showLinearProgress}) => ({formula, showLinearProgress});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateFunctionForm: formula => dispatch(updateFunctionForm(formula)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWithStyles);","import * as Math from 'mathjs'\r\nimport {range} from 'underscore'\r\n\r\nclass MathParser {\r\n\r\n    constructor(formula, start, stop, step) {\r\n        this.parser = Math.parser();\r\n        this.parser.evaluate(formula);\r\n        this.x = range(start, stop, step);\r\n        this.y = range(start, stop, step);\r\n        this.z = [];\r\n    }\r\n\r\n     evaluate() {\r\n        for (let x of this.x) {\r\n            const temp = [];\r\n            for (let y of this.y) {\r\n                const z = this.parser.evaluate(`f(${x},${y})`);\r\n                temp.push(z)\r\n            }\r\n            this.z.push(temp);\r\n        }\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n            z: this.z\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MathParser;","const {REACT_APP_PROTOCOL, REACT_APP_PORT, REACT_APP_SERVER_ADDRESS} = process.env;\r\n\r\nconst endpoints = {\r\n    SHARE_PLOT_ENDPOINT: '/vis-plot/',\r\n    SHARE_GRAPH_ENDPOINT: '/vis-graph/'\r\n};\r\n\r\nconst API = {\r\n    SHARE_PLOT_URL: `${REACT_APP_PROTOCOL}://${REACT_APP_SERVER_ADDRESS}:${REACT_APP_PORT}${endpoints.SHARE_PLOT_ENDPOINT}`,\r\n    SHARE_GRAPH_URL: `${REACT_APP_PROTOCOL}://${REACT_APP_SERVER_ADDRESS}:${REACT_APP_PORT}${endpoints.SHARE_GRAPH_ENDPOINT}`\r\n};\r\n\r\nexport default API;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction TemporaryPopover({open, anchorEl}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Popover\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n            }}\r\n        >\r\n            <Typography className={classes.typography}>Copied !</Typography>\r\n        </Popover>\r\n    );\r\n}\r\n\r\nexport default TemporaryPopover;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport TemporaryPopover from \"./TemporaryPopover\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ShareLinkDialog({open, handleClose, link}) {\r\n\r\n    const [showPopover, setShowPopover] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const copyLink = event => {\r\n        setAnchorEl(event.currentTarget);\r\n        navigator.clipboard.writeText(link)\r\n            .finally(() => {\r\n                setShowPopover(true);\r\n                setTimeout(() => setShowPopover(false), 600)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Sharing link below:\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {link}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={copyLink} color=\"primary\">\r\n                        <LinkIcon/> Copy link\r\n                    </Button>\r\n                </DialogActions>\r\n                <TemporaryPopover open={showPopover} anchorEl={anchorEl}/>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShareLinkDialog;","import React from 'react';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport Plotly from 'plotly.js/dist/plotly-gl3d'\r\nimport Box from '@material-ui/core/Box';\r\nimport {connect} from 'react-redux'\r\nimport MathParser from \"../../utils/MathParser\";\r\nimport {globalSnackbar, globalLinearProgress} from \"../../actions/actions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport axios from 'axios'\r\nimport API from '../../config/config'\r\nimport ShareLinkDialog from \"../common/ShareLinkDialog\";\r\n\r\nconst PlotlyComponent = createPlotlyComponent(Plotly);\r\n\r\nconst layout = {\r\n    title: '3D Chart',\r\n    width: '800',\r\n    height: '600',\r\n    autosize: true,\r\n};\r\nconst config = {\r\n    showLink: false,\r\n    displayModeBar: true\r\n};\r\n\r\nclass FlexPlot extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.plotRef = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        x: null,\r\n        y: null,\r\n        z: null,\r\n        finished: false,\r\n        showDialog: false,\r\n        shareLink: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    _onShareButtonClicked = () => {\r\n        const {formula, start, end, step, showLinearProgress, showSnackbar} = this.props;\r\n        showLinearProgress(true);\r\n        axios.post(API.SHARE_PLOT_URL, {formula, start, end, step})\r\n            .then(response => {\r\n                this.setState({showDialog: true, shareLink: response.data.shareUrl})\r\n            })\r\n            .catch(err => {\r\n                showSnackbar(true, {message: err.message});\r\n                console.error(err)\r\n            })\r\n            .finally(() => showLinearProgress(false))\r\n    };\r\n\r\n    _onShareDialogClose = () => {\r\n        this.setState({showDialog: false})\r\n    };\r\n\r\n    drawPlot = () => {\r\n        const {formula, start, end, step} = this.props;\r\n        try {\r\n            const parser = new MathParser(formula, start, end, step);\r\n            const {x, y, z} = parser.evaluate();\r\n            this.setState({x, y, z, finished: true})\r\n        } catch (err) {\r\n            console.error(err);\r\n            this.props.showSnackbar(true, {message: \"Cannot parse function!\"});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const data = [{\r\n            type: 'surface',  // all \"scatter\" attributes: https://plot.ly/javascript/reference/#scatter\r\n            x: this.state.x,\r\n            y: this.state.y,\r\n            z: this.state.z,\r\n\r\n            marker: {         // marker is an object, valid marker keys: #scatter-marker\r\n                color: 'rgb(16, 32, 77)' // more about \"marker.color\": #scatter-marker-color\r\n            },\r\n        },\r\n        ];\r\n        return (\r\n            <Box flexDirection=\"column\" flexWrap=\"nowrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\r\n                 pt={1}>\r\n                <PlotlyComponent ref={this.plotRef} data={data} layout={layout} config={config}/>\r\n\r\n                {this.state.finished &&\r\n                <Box>\r\n                    <Button color=\"primary\" size=\"small\" variant=\"contained\" onClick={this._onShareButtonClicked}>\r\n                        <ShareOutlinedIcon/> Share\r\n                    </Button>\r\n                </Box>}\r\n                <ShareLinkDialog handleClose={this._onShareDialogClose} open={this.state.showDialog}\r\n                                 link={this.state.shareLink}/>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({formula, start, end, step}) => ({formula, start, end, step});\r\n\r\n//todo handle common option - error variant in this case\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSnackbar: (show, options) => dispatch(globalSnackbar(show, options)),\r\n        showLinearProgress: (show) => dispatch(globalLinearProgress(show))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlexPlot);","import React from 'react';\r\nimport ChartDrawerNavbar from \"../chart-drawer-navbar/ChartDrawerNavbar\";\r\nimport FlexPlot from \"../plot/FlexPlot\";\r\n\r\nclass ChartDrawer extends React.Component {\r\n\r\n    _drawPlot = () => {\r\n        this.plot.drawPlot()\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ChartDrawerNavbar draw={this._drawPlot}/>\r\n                <FlexPlot onRef={ref => this.plot = ref}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartDrawer;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nfunction GraphDrawerNavbar({classes, fileUploaded}) {\r\n\r\n    const _handleUploadFile = event => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(event.target.files[0]);\r\n        fileReader.onload = e => fileUploaded(e.target.result);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"relative\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <input\r\n                        accept=\"text/csv\"\r\n                        style={{display: 'none'}}\r\n                        id=\"raised-button-file\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={_handleUploadFile}\r\n                    />\r\n                    <label htmlFor=\"raised-button-file\">\r\n                        <Button variant=\"contained\" component=\"span\" color=\"primary\">\r\n                            <PublishIcon/> Upload\r\n                        </Button>\r\n                    </label>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/\">\r\n                <ArrowBackIcon/> Change app\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nGraphDrawerNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst componentWithStyles = withStyles(styles)(GraphDrawerNavbar);\r\n\r\nexport default componentWithStyles;","import React from 'react'\r\nimport Graph from \"react-graph-vis\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport {processAndValidateGraphData} from \"../../utils/GraphUtils\";\r\nimport {globalSnackbar, globalLinearProgress} from \"../../actions/actions\";\r\nimport axios from 'axios'\r\nimport API from '../../config/config'\r\nimport ShareLinkDialog from \"../common/ShareLinkDialog\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst graphOptions = {\r\n    layout: {\r\n        hierarchical: false\r\n    },\r\n    edges: {\r\n        color: \"lightgray\",\r\n        arrows: {\r\n            to: {\r\n                enabled: false\r\n            },\r\n            from: {\r\n                enabled: false\r\n            }\r\n        }\r\n    },\r\n    nodes: {\r\n        font: {\r\n            color: \"ghostwhite\"\r\n        }\r\n    },\r\n    height: \"400px\",\r\n    width: '600px',\r\n};\r\n\r\n\r\nclass FlexGraph extends React.Component {\r\n\r\n    state = {\r\n        graphData: {\r\n            nodes: [],\r\n            edges: []\r\n        },\r\n        finished: false,\r\n        showDialog: false,\r\n        shareLink: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    drawGraph = (csvFile) => {\r\n        let nodes, edges;\r\n        try {\r\n            [nodes, edges] = processAndValidateGraphData(csvFile);\r\n        } catch (e) {\r\n            console.error(e);\r\n            this.props.showSnackbar(true, {message: e.message});\r\n        }\r\n        this.setState({graphData: {nodes: nodes, edges: edges}, finished: true})\r\n    };\r\n\r\n    _onShareButtonClicked = () => {\r\n        const graphData = this.prepareRequestData();\r\n        console.log('REQUEST DATA')\r\n        console.log(graphData)\r\n        const {showSnackbar, showLinearProgress} = this.props;\r\n        axios.post(API.SHARE_GRAPH_URL, graphData)\r\n            .then(response => {\r\n                console.log('RESPONSE DATA')\r\n                console.log(response.data);\r\n                this.setState({showDialog: true, shareLink: response.data.shareUrl})\r\n            })\r\n            .catch(err => {\r\n                showSnackbar(true, {message: err.message});\r\n                console.error(err)\r\n            })\r\n            .finally(() => showLinearProgress(false))\r\n    };\r\n\r\n    prepareRequestData(){\r\n        const connections = this.state.graphData.edges.map(item => ({connection_from: item.from, connection_to: item.to}));\r\n        const nodes = this.state.graphData.nodes.map(item => ({node:item.label}));\r\n        return {connections, nodes}\r\n    }\r\n\r\n    _onShareDialogClose = () => {\r\n        this.setState({showDialog: false})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Box flexDirection=\"column\" flexWrap=\"nowrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\r\n                 pt={1}>\r\n\r\n                <Box>\r\n                    <Graph graph={this.state.graphData} options={graphOptions}/>\r\n                </Box>\r\n\r\n                {this.state.finished && <Box mt={4}>\r\n                    <Button color=\"primary\" size=\"small\" variant=\"contained\" onClick={this._onShareButtonClicked}>\r\n                        <ShareOutlinedIcon/> Share\r\n                    </Button>\r\n                </Box>}\r\n\r\n                <ShareLinkDialog handleClose={this._onShareDialogClose} open={this.state.showDialog}\r\n                                 link={this.state.shareLink}/>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n//todo handle common option - error variant in this case\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSnackbar: (show, options) => dispatch(globalSnackbar(show, options)),\r\n        showLinearProgress: (show) => dispatch(globalLinearProgress(show))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FlexGraph)","import {Parser} from 'papaparse'\r\n\r\nexport function randomColor() {\r\n    return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\r\n}\r\n\r\n//TODO make exact file validation\r\nexport function processAndValidateGraphData(csvFile) {\r\n    const parser = new Parser({});\r\n    const {data} = parser.parse(csvFile, 0, false);\r\n\r\n    const nodes = data[0];\r\n    const nodesAmount = nodes.length;\r\n    const edges = data.slice(1);\r\n\r\n    const resultNodes = [];\r\n    const resultEdges = [];\r\n\r\n    for (let i = 0; i < nodesAmount; i++) {\r\n        const item = nodes[i].trim();\r\n        if (item) {\r\n            resultNodes.push({id: i + 1, label: nodes[i].trim(), color: randomColor()});\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < edges.length; i++) {\r\n        if (edges[i].length > 2) {\r\n            throw Error('Invalid file format')\r\n        }\r\n        const item1 = edges[i][0].trim();\r\n        const item2 = edges[i][1].trim();\r\n        if (item1 > nodesAmount || item2 > nodesAmount) {\r\n            throw Error(`Connection between nodes ${item1} and ${item2} cannot be established!`)\r\n        }\r\n        if (item1 && item2) {\r\n            resultEdges.push({from: item1, to: item2})\r\n        }\r\n    }\r\n\r\n    return [resultNodes, resultEdges]\r\n}","import React from 'react'\r\nimport GraphDrawerNavbar from '../graph-drawer-navbar/GraphDrawerNavbar'\r\nimport FlexGraph from \"../graph/FlexGraph\";\r\n\r\n\r\nclass GraphDrawer extends React.Component {\r\n\r\n    _drawGraph = (data) => {\r\n        this.graph.drawGraph(data)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GraphDrawerNavbar fileUploaded={this._drawGraph}/>\r\n                <FlexGraph onRef={ref => this.graph = ref}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphDrawer;","import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nimport GlobalSnackbar from \"../common/GlobalSnackbar\";\r\nimport ChartDrawer from \"../3d-chart-drawer/ChartDrawer\";\r\nimport GraphDrawer from \"../graph-drawer/GraphDrawer\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Route exact path=\"/\" component={ChartDrawer}/>\r\n                <Route path=\"/graph-drawer\" component={GraphDrawer}/>\r\n            </BrowserRouter>\r\n            <GlobalSnackbar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the components.app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web components.app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different components.app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n    GLOBAL_SNACKBAR,\r\n    UPDATE_FUNCTION_FORM,\r\n    UPDATE_PLOTTING_DATA,\r\n    GLOBAL_LINEAR_PROGRESS\r\n} from '../constants/actionTypes'\r\n\r\nconst initState = {\r\n    formula: \"f(x,y) = \",\r\n    start: -10,\r\n    end: 10,\r\n    step: 0.1,\r\n    showSnackbar: false,\r\n    snackbarOptions: {\r\n        message: \"\"\r\n    },\r\n    showLinearProgress: false,\r\n};\r\n\r\nconst reducer = (state = initState, {type, payload}) => {\r\n    switch (type) {\r\n        case UPDATE_FUNCTION_FORM:\r\n            return {\r\n                ...state,\r\n                formula: payload.formula\r\n            };\r\n        case UPDATE_PLOTTING_DATA:\r\n            const propertyToUpdate = Object.keys(payload.data)[0];\r\n            const value = payload.data[propertyToUpdate];\r\n            return {\r\n                ...state,\r\n                [propertyToUpdate]: value\r\n            };\r\n        case GLOBAL_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                showSnackbar: payload.show,\r\n                snackbarOptions: payload.snackbarOptions\r\n            };\r\n        case GLOBAL_LINEAR_PROGRESS:\r\n            return {\r\n                ...state,\r\n                showLinearProgress: payload.show\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport chatReducer from './reducers/reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default createStore(chatReducer, composeWithDevTools())\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nimport 'typeface-roboto'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your components.app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}