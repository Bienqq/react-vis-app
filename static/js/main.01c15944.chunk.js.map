{"version":3,"sources":["components/snackbar/SnackbarContentWrapper.js","actions/actions.js","constants/actionTypes.js","components/snackbar/GlobalSnackbar.js","components/chart-drawer-navbar/CustomTextField.js","components/chart-drawer-navbar/MoreOptions.js","components/chart-drawer-navbar/ChartDrawerNavbar.js","utils/MathParser.js","components/plot/FlexPlot.js","components/3d-chart-drawer/ChartDrawer.js","components/graph-drawer-navbar/GraphDrawerNavbar.js","components/graph/FlexGraph.js","utils/GraphUtils.js","components/graph-drawer/GraphDrawer.js","components/app/App.js","serviceWorker.js","reducers/reducer.js","store.js","index.js"],"names":["useStylesWrapper","makeStyles","theme","error","backgroundColor","palette","dark","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackbarContentWrapper","props","classes","onClose","options","SnackbarContent","className","id","clsx","action","IconButton","key","color","onClick","showSnackbar","show","snackbarOptions","type","payload","connect","dispatch","hideSnackbar","onSnackbarCLose","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","CustomTextField","withStyles","root","borderBottomColor","borderBottom","borderColor","TextField","useStyles","formContainer","flexWrap","textField","marginLeft","width","start","end","step","updateData","data","updatePlottingData","handleChange","name","event","value","Number","parseFloat","target","isNaN","closed","noValidate","autoComplete","label","onChange","margin","ChartDrawerNavbar","state","showMoreOptions","_handleDrawButton","draw","_onInputChange","updateFunctionForm","_handleShowMoreOptions","setState","this","formula","AppBar","position","appBar","Toolbar","search","searchIcon","SvgIcon","InputBase","placeholder","inputRoot","input","inputInput","ButtonGroup","variant","buttonGroup","Button","size","href","process","React","Component","componentWithStyles","flexGrow","borderRadius","shape","fade","common","white","breakpoints","up","height","pointerEvents","justifyContent","padding","transition","transitions","create","MathParser","stop","parser","Math","evaluate","x","range","y","z","temp","push","PlotlyComponent","createPlotlyComponent","Plotly","layout","title","autosize","config","showLink","displayModeBar","FlexPlot","finished","drawPlot","e","onRef","undefined","marker","Box","flexDirection","pt","ChartDrawer","_drawPlot","plot","Fragment","ref","fileUploaded","accept","style","multiple","fileReader","FileReader","readAsBinaryString","files","onload","result","htmlFor","component","hierarchical","edges","arrows","to","enabled","from","nodes","font","FlexGraph","graphData","drawGraph","csvFile","Parser","parse","nodesAmount","length","slice","resultNodes","resultEdges","i","trim","random","toString","Error","item1","item2","processAndValidateGraphData","console","graph","mt","GraphDrawer","_drawGraph","App","basename","exact","path","Boolean","window","location","hostname","match","initState","reducer","propertyToUpdate","Object","keys","createStore","chatReducer","composeWithDevTools","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01c15944.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStylesWrapper = makeStyles(theme => ({\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n    const classes = useStylesWrapper();\r\n    const {message, onClose, options} = props;\r\n    // todo handle options\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classes.error}\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <ErrorIcon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n               </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon}/>\r\n                </IconButton>,\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SnackbarContentWrapper;","import {HIDE_SNACKBAR, SHOW_SNACKBAR, UPDATE_FUNCTION_FORM, UPDATE_PLOTTING_DATA} from \"../constants/actionTypes\";\r\n\r\nexport const updatePlottingData = (data) => {\r\n    return {\r\n        type: UPDATE_PLOTTING_DATA,\r\n        payload: {\r\n            data,\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateFunctionForm = formula => {\r\n    return {\r\n        type: UPDATE_FUNCTION_FORM,\r\n        payload: {\r\n            formula\r\n        }\r\n    }\r\n};\r\n\r\nexport const showSnackbar = (show, snackbarOptions) => {\r\n    return {\r\n        type: SHOW_SNACKBAR,\r\n        payload: {\r\n            show,\r\n            snackbarOptions\r\n        }\r\n    }\r\n};\r\n\r\nexport const hideSnackbar = show => {\r\n    return {\r\n        type: HIDE_SNACKBAR,\r\n        payload: {\r\n            show,\r\n        }\r\n    }\r\n};\r\n\r\n","export const UPDATE_FUNCTION_FORM = 'UPDATE_FUNCTION_FORM';\r\nexport const UPDATE_PLOTTING_DATA = 'UPDATE_PLOTTING_DATA';\r\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\r\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\nimport {hideSnackbar} from \"../../actions/actions\";\r\nimport {connect} from 'react-redux'\r\n\r\nfunction GlobalSnackbar(props) {\r\n\r\n    const onSnackbarCLose = () => {\r\n        props.hideSnackbar(true)\r\n    };\r\n\r\n    const {showSnackbar, snackbarOptions} = props;\r\n\r\n    return (\r\n        <Snackbar\r\n            anchorOrigin={{vertical: 'bottom', horizontal: 'center'}}\r\n            open={showSnackbar}\r\n            autoHideDuration={5000}\r\n            onClose={onSnackbarCLose}\r\n        >\r\n            <SnackbarContentWrapper\r\n                onClose={onSnackbarCLose}\r\n                message={snackbarOptions.message}\r\n                options={snackbarOptions}\r\n            />\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({showSnackbar, snackbarOptions}) => ({showSnackbar, snackbarOptions});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        hideSnackbar: () => dispatch(hideSnackbar(false)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalSnackbar);","import TextField from '@material-ui/core/TextField';\r\nimport {withStyles} from '@material-ui/core/styles';\r\n\r\n// Overriding default styles for TextField\r\nconst CustomTextField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'ghostwhite',\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            color: 'ghostwhite',\r\n        },\r\n        '& .MuiInput-underline': {\r\n            '&:before': {\r\n                borderBottomColor: 'ghostwhite',\r\n            },\r\n            '&:hover:not(.Mui-disabled):before': {\r\n                borderBottom: '1px solid ghostwhite',\r\n            },\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: 'ghostwhite',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default CustomTextField;","import React from 'react';\r\nimport CustomTextField from \"./CustomTextField\";\r\nimport {SlideDown} from 'react-slidedown';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux'\r\nimport {updatePlottingData} from \"../../actions/actions\";\r\n\r\nimport 'react-slidedown/lib/slidedown.css'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nfunction MoreOptions({open, start, end, step, updateData}) {\r\n    const classes = useStyles();\r\n\r\n    const handleChange = name => event => {\r\n        const value = Number.parseFloat(event.target.value);\r\n        updateData({[name]: Number.isNaN(value) ? \"\" : value});\r\n    };\r\n\r\n    return (\r\n        //component taken from https://github.com/frankwallis/react-slidedown\r\n        <SlideDown closed={!open}>\r\n            <div>\r\n                <form className={classes.formContainer} noValidate autoComplete=\"off\">\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"Start point\"\r\n                        type=\"number\"\r\n                        value={start}\r\n                        onChange={handleChange('start')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"End point\"\r\n                        type=\"number\"\r\n                        value={end}\r\n                        className={classes.textField}\r\n                        onChange={handleChange('end')}\r\n                        margin=\"normal\"\r\n                    />\r\n                    <CustomTextField\r\n                        id=\"standard-number\"\r\n                        label=\"Step\"\r\n                        type=\"number\"\r\n                        value={step}\r\n                        className={classes.textField}\r\n                        onChange={handleChange('step')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        </SlideDown>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({start, end, step}) => ({start, end, step});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateData: data => dispatch(updatePlottingData(data))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreOptions);","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {fade, withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport {Function} from 'mdi-material-ui'\r\nimport MoreOptions from \"./MoreOptions\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport {connect} from 'react-redux'\r\nimport {updateFunctionForm} from '../../actions/actions';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(5),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 180,\r\n            '&:focus': {\r\n                width: 260,\r\n            },\r\n        },\r\n    },\r\n    buttonGroup: {\r\n        margin: 4,\r\n    },\r\n});\r\n\r\nclass ChartDrawerNavbar extends React.Component {\r\n\r\n    state = {\r\n        showMoreOptions: false,\r\n    };\r\n\r\n    _handleDrawButton = () => {\r\n        this.props.draw()\r\n    };\r\n\r\n    _onInputChange = (event) => {\r\n        this.props.updateFunctionForm(event.target.value)\r\n    };\r\n\r\n    _handleShowMoreOptions = () => {\r\n        this.setState({showMoreOptions: !this.state.showMoreOptions})\r\n    };\r\n\r\n    render() {\r\n        const {classes, formula} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"relative\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SvgIcon>\r\n                                    <Function/>\r\n                                </SvgIcon>\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Write function formula\"\r\n                                classes={{root: classes.inputRoot, input: classes.inputInput}}\r\n                                value={formula}\r\n                                onChange={this._onInputChange}\r\n                            />\r\n\r\n                            <ButtonGroup variant=\"contained\" color=\"inherit\" className={classes.buttonGroup}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this._handleDrawButton}>\r\n                                    Draw\r\n                                </Button>\r\n                                <Button color=\"primary\" size=\"small\" onClick={this._handleShowMoreOptions}>\r\n                                    <ArrowDropDownIcon/>\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    </Toolbar>\r\n                    <MoreOptions open={this.state.showMoreOptions}/>\r\n                </AppBar>\r\n                <Button variant=\"outlined\" color=\"primary\" href={`${process.env.PUBLIC_URL}/graph-drawer`}>\r\n                    <ArrowBackIcon/> Change app\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChartDrawerNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst componentWithStyles = withStyles(styles)(ChartDrawerNavbar);\r\n\r\nconst mapStateToProps = ({formula}) => ({formula});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        updateFunctionForm: formula => dispatch(updateFunctionForm(formula)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWithStyles);","import * as Math from 'mathjs'\r\nimport {range} from 'underscore'\r\n\r\nclass MathParser {\r\n\r\n    constructor(formula, start, stop, step) {\r\n        this.parser = Math.parser();\r\n        this.parser.evaluate(formula);\r\n        this.x = range(start, stop, step);\r\n        this.y = range(start, stop, step);\r\n        this.z = [];\r\n    }\r\n\r\n     evaluate() {\r\n        for (let x of this.x) {\r\n            const temp = [];\r\n            for (let y of this.y) {\r\n                const z = this.parser.evaluate(`f(${x},${y})`);\r\n                temp.push(z)\r\n            }\r\n            this.z.push(temp);\r\n        }\r\n        return {\r\n            x: this.x,\r\n            y: this.y,\r\n            z: this.z\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MathParser;","import React from 'react';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport Plotly from 'plotly.js/dist/plotly-gl3d.min'\r\nimport Box from '@material-ui/core/Box';\r\nimport {connect} from 'react-redux'\r\nimport MathParser from \"../../utils/MathParser\";\r\nimport {showSnackbar} from \"../../actions/actions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\n\r\n\r\nconst PlotlyComponent = createPlotlyComponent(Plotly);\r\n\r\nconst layout = {\r\n    title: '3D Chart',\r\n    width: '800',\r\n    height: '600',\r\n    autosize: true,\r\n};\r\nconst config = {\r\n    showLink: false,\r\n    displayModeBar: true\r\n};\r\n\r\nclass FlexPlot extends React.Component {\r\n\r\n    state = {\r\n        x: null,\r\n        y: null,\r\n        z: null,\r\n        finished: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    drawPlot = () => {\r\n        const {formula, start, end, step} = this.props;\r\n        try {\r\n            const parser = new MathParser(formula, start, end, step);\r\n            const {x, y, z} = parser.evaluate();\r\n            this.setState({x, y, z, finished: true})\r\n        } catch (e) {\r\n            this.props.showSnackbar(true, {message: \"Cannot parse function!\"});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const data = [{\r\n            type: 'surface',  // all \"scatter\" attributes: https://plot.ly/javascript/reference/#scatter\r\n            x: this.state.x,\r\n            y: this.state.y,\r\n            z: this.state.z,\r\n\r\n            marker: {         // marker is an object, valid marker keys: #scatter-marker\r\n                color: 'rgb(16, 32, 77)' // more about \"marker.color\": #scatter-marker-color\r\n            },\r\n        },\r\n        ];\r\n        return (\r\n            <Box flexDirection=\"column\" flexWrap=\"nowrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\r\n                 pt={1}>\r\n                <PlotlyComponent data={data} layout={layout} config={config}/>\r\n\r\n                {this.state.finished &&\r\n                <Box>\r\n                    <Button color=\"primary\" size=\"small\" variant=\"contained\">\r\n                        <ShareOutlinedIcon/> Share\r\n                    </Button>\r\n                </Box>}\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({formula, start, end, step}) => ({formula, start, end, step});\r\n\r\n//todo handle snackbar option - error variant in this case\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSnackbar: (show, options) => dispatch(showSnackbar(show, options)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlexPlot);","import React from 'react';\r\nimport ChartDrawerNavbar from \"../chart-drawer-navbar/ChartDrawerNavbar\";\r\nimport FlexPlot from \"../plot/FlexPlot\";\r\n\r\nclass ChartDrawer extends React.Component {\r\n\r\n    _drawPlot = () => {\r\n        this.plot.drawPlot()\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <ChartDrawerNavbar draw={this._drawPlot}/>\r\n                <FlexPlot onRef={ref => this.plot = ref}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartDrawer;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nfunction GraphDrawerNavbar({classes, fileUploaded}) {\r\n\r\n    const _handleUploadFile = event => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsBinaryString(event.target.files[0]);\r\n        fileReader.onload = e => fileUploaded(e.target.result);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"relative\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <input\r\n                        accept=\"text/csv\"\r\n                        style={{display: 'none'}}\r\n                        id=\"raised-button-file\"\r\n                        multiple\r\n                        type=\"file\"\r\n                        onChange={_handleUploadFile}\r\n                    />\r\n                    <label htmlFor=\"raised-button-file\">\r\n                        <Button variant=\"contained\" component=\"span\" color=\"primary\">\r\n                            <PublishIcon/> Upload\r\n                        </Button>\r\n                    </label>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Button variant=\"outlined\" color=\"primary\" href=\"/\">\r\n                <ArrowBackIcon/> Change app\r\n            </Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nGraphDrawerNavbar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst componentWithStyles = withStyles(styles)(GraphDrawerNavbar);\r\n\r\nexport default componentWithStyles;","import React from 'react'\r\nimport Graph from \"react-graph-vis\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\r\nimport {processAndValidateGraphData} from \"../../utils/GraphUtils\";\r\nimport {showSnackbar} from \"../../actions/actions\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst options = {\r\n    layout: {\r\n        hierarchical: false\r\n    },\r\n    edges: {\r\n        color: \"lightgray\",\r\n        arrows: {\r\n            to: {\r\n                enabled: false\r\n            },\r\n            from: {\r\n                enabled: false\r\n            }\r\n        }\r\n    },\r\n    nodes: {\r\n        font: {\r\n            color: \"ghostwhite\"\r\n        }\r\n    },\r\n    height: \"400px\",\r\n    width: '600px',\r\n};\r\n\r\n\r\nclass FlexGraph extends React.Component {\r\n\r\n    state = {\r\n        graphData: {\r\n            nodes: [],\r\n            edges: []\r\n        },\r\n        finished: false\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    drawGraph = (csvFile) => {\r\n        let nodes, edges;\r\n        try {\r\n            [nodes, edges] = processAndValidateGraphData(csvFile);\r\n        } catch (e) {\r\n            console.error(e);\r\n            this.props.showSnackbar(true, {message: e.message});\r\n        }\r\n        this.setState({graphData: {nodes: nodes, edges: edges}, finished: true})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Box flexDirection=\"column\" flexWrap=\"nowrap\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\"\r\n                 pt={1}>\r\n\r\n                <Box>\r\n                    <Graph\r\n                        graph={this.state.graphData}\r\n                        options={options}\r\n                    />\r\n                </Box>\r\n\r\n                {this.state.finished && <Box mt={4}>\r\n                    <Button color=\"primary\" size=\"small\" variant=\"contained\">\r\n                        <ShareOutlinedIcon/> Share\r\n                    </Button>\r\n                </Box>}\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\n//todo handle snackbar option - error variant in this case\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        showSnackbar: (show, options) => dispatch(showSnackbar(show, options)),\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FlexGraph)","import {Parser} from 'papaparse'\r\n\r\nexport function randomColor() {\r\n    return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);\r\n}\r\n\r\n//TODO make exact file validation\r\nexport function processAndValidateGraphData(csvFile) {\r\n    const parser = new Parser({});\r\n    const {data} = parser.parse(csvFile, 0, false);\r\n\r\n    const nodes = data[0];\r\n    const nodesAmount = nodes.length;\r\n    const edges = data.slice(1);\r\n\r\n    const resultNodes = [];\r\n    const resultEdges = [];\r\n\r\n    for (let i = 0; i < nodesAmount; i++) {\r\n        const item = nodes[i].trim();\r\n        if (item) {\r\n            resultNodes.push({id: i + 1, label: nodes[i].trim(), color: randomColor()});\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < edges.length; i++) {\r\n        if (edges[i].length > 2) {\r\n            throw Error('Invalid file format')\r\n        }\r\n        const item1 = edges[i][0].trim();\r\n        const item2 = edges[i][1].trim();\r\n        if (item1 > nodesAmount || item2 > nodesAmount) {\r\n            throw Error(`Connection between nodes ${item1} and ${item2} cannot be established!`)\r\n        }\r\n        if (item1 && item2) {\r\n            resultEdges.push({from: item1, to: item2})\r\n        }\r\n    }\r\n\r\n    return [resultNodes, resultEdges]\r\n}","import React from 'react'\r\nimport GraphDrawerNavbar from '../graph-drawer-navbar/GraphDrawerNavbar'\r\nimport FlexGraph from \"../graph/FlexGraph\";\r\n\r\n\r\nclass GraphDrawer extends React.Component {\r\n\r\n    _drawGraph = (data) => {\r\n        this.graph.drawGraph(data)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GraphDrawerNavbar fileUploaded={this._drawGraph}/>\r\n                <FlexGraph onRef={ref => this.graph = ref}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GraphDrawer;","import React from 'react';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nimport GlobalSnackbar from \"../snackbar/GlobalSnackbar\";\r\nimport ChartDrawer from \"../3d-chart-drawer/ChartDrawer\";\r\nimport GraphDrawer from \"../graph-drawer/GraphDrawer\";\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Route exact path=\"/\" component={ChartDrawer}/>\r\n                <Route path=\"/graph-drawer\" component={GraphDrawer}/>\r\n            </BrowserRouter>\r\n            <GlobalSnackbar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the components.app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web components.app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different components.app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {HIDE_SNACKBAR, SHOW_SNACKBAR, UPDATE_FUNCTION_FORM, UPDATE_PLOTTING_DATA} from '../constants/actionTypes'\r\n\r\nconst initState = {\r\n    formula: \"f(x,y) = \",\r\n    start: -10,\r\n    end: 10,\r\n    step: 0.1,\r\n    showSnackbar: false,\r\n    snackbarOptions: {\r\n        message: \"\"\r\n    }\r\n};\r\n\r\nconst reducer = (state = initState, {type, payload}) => {\r\n    switch (type) {\r\n        case UPDATE_FUNCTION_FORM:\r\n            return {\r\n                ...state,\r\n                formula: payload.formula\r\n            };\r\n        case UPDATE_PLOTTING_DATA:\r\n            const propertyToUpdate = Object.keys(payload.data)[0];\r\n            const value = payload.data[propertyToUpdate];\r\n            return {\r\n                ...state,\r\n                [propertyToUpdate]: value\r\n            };\r\n        case SHOW_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                showSnackbar: true,\r\n                snackbarOptions: payload.snackbarOptions\r\n            };\r\n        case HIDE_SNACKBAR:\r\n            return {\r\n                ...state,\r\n                showSnackbar: false,\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer","import { createStore } from 'redux'\r\nimport chatReducer from './reducers/reducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nexport default createStore(chatReducer, composeWithDevTools())\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nimport 'typeface-roboto'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your components.app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}